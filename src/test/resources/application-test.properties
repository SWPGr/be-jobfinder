# Import main application config as base
spring.config.import=optional:file:.env

# Override Database configuration for integration testing with MySQL


spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect


# Keep the same external service configurations as main app
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Use real API keys for integration testing (from secrets)
google.gemini.api-key=${GEMINI_API_KEY:dummy-key-for-test}
google.gemini.model-name=gemini-1.5-flash-latest

# OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/auth/google/callback

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# App Config
app.frontend.url=http://localhost:3030

# Elasticsearch (use CI service)
spring.elasticsearch.uris=${ELASTIC_URI:http://localhost:9200}
spring.elasticsearch.connection-timeout=10s
spring.elasticsearch.socket-timeout=15s

# PayOS
payos.client-id=${PAYOS_CLIENT_ID:test-client-id}
payos.api-key=${PAYOS_API_KEY:test-api-key}
payos.checksum-key=${PAYOS_CHECKSUM_KEY:test-checksum}


# Cloudinary
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

spring.sql.init.mode=never



# Reduced logging for integration tests
logging.level.org.springframework.security=WARN
logging.level.com.jobplatform=INFO
logging.level.org.springframework.web.socket=WARN
logging.level.org.springframework.messaging=WARN
debug=false

logging.level.org.springframework.jdbc.datasource.init.ScriptUtils=DEBUG
logging.level.org.springframework.boot.sql.init=DEBUG

