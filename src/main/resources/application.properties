spring.config.import=optional:file:.env

server.port=${PORT:8080}

# Database configuration
spring.datasource.url=jdbc:mysql://shinkansen.proxy.rlwy.net:15502/jobfinderchec3aa?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true

# Mail properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

google.gemini.api-key=${GEMINI_API_KEY}
google.gemini.model-name=gemini-1.5-flash-latest
logging.level.org.springframework.security=DEBUG
logging.level.com.jobplatform=DEBUG
debug=true

# ==== Google OAuth2 Configuration ====
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://be-jobfinder-o830.onrender.com/api/auth/google/callback

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email
spring.application.name=chatboxlogging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG
# App Config
app.frontend.url=http://localhost:3030

#http://localhost:9200
#admin123
spring.elasticsearch.uris=${ELASTIC_URI}
spring.elasticsearch.username=${ELASTIC_USERNAME}
spring.elasticsearch.password=${ELASTIC_PASSWORD}
management.health.elasticsearch.enabled=false


payos.client-id=${PAYOS_CLIENT_ID}
payos.api-key=${PAYOS_API_KEY}
payos.checksum-key=${PAYOS_CHECKSUM_KEY}

spring.elasticsearch.connection-timeout=10s
spring.elasticsearch.socket-timeout=15s

# Cloudinary Config
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}